definitions:
  helper.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  model.Average:
    properties:
      average:
        type: number
      sensortype:
        type: string
      unit:
        type: string
    type: object
  model.Measure:
    properties:
      _id:
        type: string
      airportid:
        type: string
      date:
        type: string
      sensorid:
        type: string
      sensortype:
        type: string
      value:
        type: number
    type: object
info:
  contact: {}
paths:
  /airport/{airportCode}/averages:
    get:
      consumes:
      - application/json
      description: Get averages of measures (temperature, pressure, wind) for a specific
        date
      parameters:
      - description: airport code IATA
        in: path
        name: airportCode
        required: true
        type: string
      - description: 'start date (example : 2021-04-04)'
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Average'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      summary: Return three averages (temperature, pressure, wind) for a specific
        date
      tags:
      - airport
  /airport/{airportCode}/measure:
    get:
      consumes:
      - application/json
      description: Get measurements of a certain type (temperature, wind, pressure)
        that are between two time (date + time)
      parameters:
      - description: airport code IATA
        in: path
        name: airportCode
        required: true
        type: string
      - description: sensor type (temperature, wind, pressure)
        in: query
        name: type
        required: true
        type: string
      - description: 'start date (example : 2021-04-04T22:08:41Z)'
        in: query
        name: startDate
        required: true
        type: string
      - description: 'end date (example : 2021-04-04T22:08:41Z)'
        in: query
        name: endDate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Measure'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      summary: Return a list of value for one type (temperature, wind, pressure) between
        two time
      tags:
      - airport
  /airports:
    get:
      description: Return all the airport in DB
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      summary: Return all the airport in DB
      tags:
      - airport
swagger: "2.0"
